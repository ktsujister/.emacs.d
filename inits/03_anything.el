(use-package anything-config
  :straight (anything-config :type git :host github :repo "emacs-jp/anything")
  :config
  (setq anything-enable-shortcuts 'prefix)
  (bind-key* "C-x a a" 'my-anything)
  (bind-keys :map anything-map
	     ((kbd "@") . anything-select-with-prefix-shortcut)
	     ("C-M-p" . anything-previous-source)
	     ("C-M-n" . anything-next-source))
  (global-set-key (kbd "M-x") 'anything-M-x)
  (global-set-key (kbd "C-x b") 'anything-buffers-list)
  (global-set-key (kbd "C-x a r") 'anything-recentf)
  (global-set-key (kbd "C-x a b") 'anything-bookmarks)
  )
;; anything
;; (require 'anything)
;; (require 'anything-startup)
;; (require 'anything-config)
;; (setq anything-c-locate-command "locate -l 20 -e -b -i -r %s")
;; (setq anything-sources (list anything-c-source-buffers
;;                              anything-c-source-bookmarks
;;                              anything-c-source-files-in-current-dir
;;                              anything-c-source-recentf
;;                              anything-c-source-file-name-history
;;                              ;; anything-c-source-locate
;;                              anything-c-source-man-pages))

;; (defun anything-filelist+ ()
;;   "Preconfigured `anything' to open files/buffers/bookmarks instantly.
;; This is a replacement for `anything-for-files'.
;; See `anything-c-filelist-file-name' docstring for usage."
;;   (interactive)
;;   (anything-other-buffer
;;    '(anything-c-source-ffap-line
;;      anything-c-source-ffap-guesser
;;      anything-c-source-buffers+
;;      anything-c-source-recentf
;;      anything-c-source-files-in-current-dir+
;;      anything-c-source-bookmarks
;;      anything-c-source-file-cache
;;      anything-c-source-filelist)
;;    "*anything file list*"))

(defun my-anything ()
  "Anything command for you.

It is automatically generated by `anything-migrate-sources'."
  (interactive)
  (anything-other-buffer
   '(anything-c-source-buffers+
     anything-c-source-bookmarks
     anything-c-source-files-in-current-dir+
     anything-c-source-recentf
     anything-c-source-file-name-history
     anything-c-source-file-cache
     ;; anything-c-source-locate
     anything-c-source-man-pages)
   ;; '(((name . "Buffers")
   ;;    (candidates . anything-c-buffer-list)
   ;;    (type . buffer))
   ;;   ((name . "Bookmarks")
   ;;    (init lambda nil (require (quote bookmark)))
   ;;    (candidates . bookmark-all-names)
   ;;    (type . bookmark))
   ;;   ((name . "Files from Current Directory")
   ;;    (candidates lambda nil (with-anything-current-buffer (directory-files (anything-c-current-directory))))
   ;;    (type . file))
   ;;   ((name . "Recentf")
   ;;    (init lambda nil (require (quote recentf)) (or recentf-mode (recentf-mode 1)))
   ;;    (candidates . recentf-list)
   ;;    (type . file))
   ;;   ((name . "File Name History")
   ;;    (candidates . file-name-history)
   ;;    (match anything-c-match-on-basename)
   ;;    (type . file))
   ;;   ((name . "Manual Pages")
   ;;    (candidates lambda nil (if anything-c-man-pages anything-c-man-pages (setq anything-c-man-pages (ignore-errors (require (quote woman)) (woman-file-name "") (sort (mapcar (quote car) woman-topic-all-completions) (quote string-lessp))))))
   ;;    (action ("Show with Woman" . anything-c-man-default-action))
   ;;    (action-transformer lambda (actions candidate) (if (eq system-type (quote darwin)) (quote (("Show with Man" . man))) actions))
   ;;    (requires-pattern . 2)))
   "*my-anything*"))

;; popwin
;; (setq pop-up-windows nil)
(use-package popwin
  :config
  ;; (setq display-buffer-function 'popwin:display-buffer)
  (popwin-mode 1)
  (setq popwin:popup-window-height 0.4)
  (setq anything-samewindow nil)
  (push '("*my-anything*") popwin:special-display-config)
  ;; (push '("*my-anything*" :height 20) popwin:special-display-config)
  ;; (push '("*anything mini*" :height 20) popwin:special-display-config)
  (push '("*Warnings*" :height 20) popwin:special-display-config)
  (push '(dired-mode :position top) popwin:special-display-config)
  ;; (push '("anything" :regexp t :height 0.5) popwin:special-display-config)
  ;; (push '("*anything*" :height 20) popwin:special-display-config)
  (push '("*cider-doc*" :height 0.5) popwin:special-display-config)
  (push '("*cider-error*" :height 0.5) popwin:special-display-config)
  (push '("*Completions*" :height 0.5) popwin:special-display-config)
  (push '("*compilation*" :height 0.5) popwin:special-display-config)
  (push '("*magit-edit-log*" :height 0.5) popwin:special-display-config)
  ;; M-!
  (push "*Shell Command Output*" popwin:special-display-config)
  (push '("*quickrun*") popwin:special-display-config)
  (push '("*Org Agenda*") popwin:special-display-config)
  (push '("*Help*") popwin:special-display-config)
  )
